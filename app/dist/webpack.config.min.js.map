{"version":3,"sources":["webpack.config.js"],"names":["path","require","MiniCssExtractPlugin","CssMinimizerPlugin","module","exports","entry","HtmlWebpackPlugin","global","resolve","__dirname","list-products","index","filename","addProducts","clean","assetModuleFilename","use","loader","options","sassOptions","includePaths","test","exclude","type","generator","plugins","chunks","template","minimize","minimizer","hot","static","alias","assets","extensions","process","NODE_ENV","mode","env"],"mappings":"aAAA,IAAMA,KAAOC,QAAQ,QACfC,qBAAuBD,QAAQ,2BAD/BD,kBAANC,QAAA,uBAGME,mBAAqBF,QAAQ,gCAEnCG,OAAOC,QAAU,CAHjBC,MAAMC,CAKFC,OAAQR,KAAKS,QAAQC,UAAW,aAJ9BP,MAAAA,KAAAA,QAAkBO,UAAW,YAM/BC,gBAAiB,yBAJrBP,YAAiB,qBAEbI,OAAM,CACNI,KAAKZ,KAAMS,QAAJC,UAAA,QACPG,SAAA,YACCC,oBAAa,4BALDC,OAAA,GAQbf,OAAMA,CACNa,MAAAA,CACAG,CACAD,KAAO,UAXME,IAAA,CAAAf,qBAAAgB,OAAA,aAAA,CAaPA,OAAA,cACDC,QACH,CACQC,YADR,CAEQlB,WAAAA,EACEmB,aAAE,CADuCrB,KAAAS,QAAAC,UAAA,sBAGhC,CADNY,KAAA,QAFNC,QAAA,eAUPN,IAAA,gBAEEM,CACAN,KAAK,mBAEPO,KAAA,iBACEF,UAAM,CACFT,SAAE,2CAEJA,CAIFS,KAAM,wBALKE,KAAA,iBAIbC,UAAA,CACMZ,SAAE,4CAQZa,QAAS,CANQ,IAAAxB,qBAAA,CA5BRW,SAAA,eAkCTa,IAAAA,kBACMxB,CACFW,SAAU,eAEZc,OAAIpB,CAAAA,SAAAA,SACFqB,SAAU,eAEVf,IAAAA,kBAAU,CAEXe,SAAIrB,uBACFqB,OAAU,CAAA,eAAA,UACVD,SAAS,uBAXL,IAcNpB,kBAAA,CACEqB,SAAU,sBACVD,OAAS,CAAA,cAAe,UACxBd,SAAU,uBAIbgB,aAAU,CACVC,UAAS,EAtEIA,UAAA,CAAA,MA4Eb,IAAA3B,qBAGA4B,UAAK,CA/EQC,OAAA,SAiFfvB,KAAO,IACLwB,MAAK,EACHC,KAAAA,GAEFC,QAAAA,CArFaF,MAAA,CAuFXC,OAAEE,KAAA3B,QAAY4B,UAAa,WAF7BF,WAAY,CAAC,MAAO,UAEtBG,KAA+B,eAAzBF,QAAQG,IAAIF,SAA4B,aAAe","file":"webpack.config.min.js","sourcesContent":["const path = require(\"path\");\r\nconst MiniCssExtractPlugin = require(\"mini-css-extract-plugin\");\r\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\");\r\nconst CssMinimizerPlugin = require(\"css-minimizer-webpack-plugin\");\r\n\r\nmodule.exports = {\r\n  entry: {\r\n    global: path.resolve(__dirname, \"global.js\"),\r\n    index: path.resolve(__dirname, \"index.js\"),\r\n    'list-products': './app/list-products.js',\r\n     addProducts: \"./add-products.js\",\r\n  },\r\n  output: {\r\n    path: path.resolve(__dirname, \"dist\"),\r\n    filename: \"[name].js\",\r\n    assetModuleFilename: \"assets/[hash][ext][query]\",\r\n    clean: true,\r\n  },\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.scss$/,\r\n        use: [MiniCssExtractPlugin.loader, \"css-loader\", {\r\n          loader: \"sass-loader\",\r\n          options: {\r\n            sassOptions: {\r\n              quietDeps: true,\r\n              includePaths: [path.resolve(__dirname, \"node_modules\")],\r\n            },\r\n          },\r\n        },],\r\n      },\r\n      {\r\n        test: /\\.js$/,\r\n        exclude: /node_modules/,\r\n        use: \"babel-loader\",\r\n      },\r\n      {\r\n        test: /\\.(png|jpg|gif)$/,\r\n        type: \"asset/resource\", // Para copiar arquivos de imagem\r\n        generator: {\r\n          filename: 'assets/images/[name][hash][ext][query]', // Colocando as imagens dentro de assets/images/\r\n        },\r\n      },\r\n      {\r\n        test: /\\.(woff(2)?|eot|ttf)$/,\r\n        type: \"asset/resource\", // Para copiar arquivos de fontes\r\n        generator: {\r\n          filename: 'assets/fonts/[name][hash][ext][query]', // Colocando as fontes dentro de assets/fonts/\r\n        },\r\n      },      \r\n    ],\r\n  },\r\n  plugins: [\r\n    new MiniCssExtractPlugin({\r\n      filename: \"[name].css\",\r\n    }),\r\n    new HtmlWebpackPlugin({\r\n      template: \"./index.html\",\r\n      chunks: [\"global\", \"index\"],\r\n      filename: \"index.html\",\r\n    }),\r\n     new HtmlWebpackPlugin({\r\n       template: \"./list-products.html\",\r\n       chunks: [\"listProducts\", \"global\"],\r\n       filename: \"list-products.html\",\r\n     }),\r\n     new HtmlWebpackPlugin({\r\n       template: \"./add-products.html\",\r\n       chunks: [\"addProducts\", \"global\"],\r\n       filename: \"add-products.html\",\r\n     }),\r\n  ],\r\n  optimization: {\r\n    minimize: true,\r\n    minimizer: [\r\n      `...`,\r\n      new CssMinimizerPlugin(),\r\n    ],\r\n  },\r\n  devServer: {\r\n    static: \"./dist\",\r\n    port: 9000,\r\n    open: true,\r\n    hot: true,\r\n  },\r\n  resolve: {\r\n    alias: {\r\n      assets: path.resolve(__dirname, \"assets\"),\r\n    },\r\n    extensions: [\".js\", \".scss\"],\r\n  },\r\n  mode: process.env.NODE_ENV === \"production\" ? \"production\" : \"development\",\r\n};\r\n"]}